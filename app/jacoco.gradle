apply plugin: 'jacoco'
jacoco {
    toolVersion "$jacoco_version"}
// run ./gradlew clean createDebugCoverageReport jacocoTestReport
task jacocoTestReport(type: JacocoReport, dependsOn: 'testDebugUnitTest'){
    group = 'Reporting'
    description = 'Generate Jacoco coverage reports'
    reports {
        xml.enabled = true
        html.enabled = true
    }
    def fileFilter = ['**/R.class','**/R$*.class','**/BuildConfig.*', '**/Manifest*.*','android/**/*.*','**/Lambda$*.class',
    '**/Lambda.class','**/*Lambda.class','**/*Lambda*.class','**/*Lambda*.*','**/*Builder.*','**/*_MembersInjector.class',
    '**/*_MembersInjector*.*', '**/*_*Factory*.*', '**/*Component*.*', '**/*Module*.*']

    def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"
    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.projectDir, includes:['**/*.exec' , '**/*.ec'])
 }